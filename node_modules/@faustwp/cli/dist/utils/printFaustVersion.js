import fs from 'fs';
import { infoLog } from '../stdout/index.js';
/**
 * Sanitizes the version from a dependency in package.json.
 *
 * @param version The dependency version.
 * @returns A sanitized version or undefined if the version is a path.
 */
export function sanitizePackageJsonVersion(_version) {
    let version = _version;
    if (!version) {
        return undefined;
    }
    if (version.charAt(0) === '^' || version.charAt(0) === '~') {
        version = version.substring(1);
    }
    /**
     * If a dependency is a file path set the value to undefined as we
     * don't want to collect file paths in telemetry
     */
    if (version.startsWith('file:')) {
        version = undefined;
    }
    return version;
}
export function printFaustVersion() {
    var _a, _b;
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const coreVersion = sanitizePackageJsonVersion((_a = packageJson === null || packageJson === void 0 ? void 0 : packageJson.dependencies) === null || _a === void 0 ? void 0 : _a['@faustwp/core']);
    const cliVersion = sanitizePackageJsonVersion((_b = packageJson === null || packageJson === void 0 ? void 0 : packageJson.dependencies) === null || _b === void 0 ? void 0 : _b['@faustwp/cli']);
    // eslint-disable-next-line
    infoLog(`Faust.js v${coreVersion || 'unknown'}`);
    infoLog(`Faust.js CLI v${cliVersion || 'unknown'}`);
}
